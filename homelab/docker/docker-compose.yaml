version: '3'

services:
  traefik:
    image: traefik:v2.2
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.toml:/traefik.toml
      - ./traefik/acme.json:/acme.json
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --certificatesResolvers.myresolver.acme.httpChallenge.entryPoint=http
      - --certificatesResolvers.myresolver.acme.email=your-email@example.com
      - --certificatesResolvers.myresolver.acme.storage=/acme.json

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
    environment:
      TZ: 'Europe/Berlin'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped # Recommended but not required (DHCP needs NET_ADMIN)

  adguardhome:
    container_name: adguardhome
    image: adguard/adguardhome
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "68:68/tcp"
      - "3000:3000/tcp"
    volumes:
      - ./adguardhome/workdir:/opt/adguardhome/work
      - ./adguardhome/confdir:/opt/adguardhome/conf

  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant
    restart: unless-stopped
    ports:
      - "8123:8123"
    volumes:
      - ./homeassistant/config:/config

  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin
    restart: unless-stopped
    ports:
      - "8096:8096"
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - /path/to/media:/media

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/config:/etc/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  influxdb:
    container_name: influxdb
    image: influxdb:latest
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - influxdb-storage:/var/lib/influxdb

  promtail:
    container_name: promtail
    image: grafana/promtail:2.2.1
    volumes:
      - /var/log:/var/log
      - ./promtail:/etc/promtail
    command: -config.file=/etc/promtail/promtail-config.yaml

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  loki:
    container_name: loki
    image: grafana/loki:2.2.1
    ports:
      - "3100:3100"
    volumes:
      - ./loki:/etc/loki

  nextcloud:
    container_name: nextcloud
    image: nextcloud/all-in-one:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8443:8443"
      - "3478:3478/udp"
    volumes:
    # - ./nextcloud/html:/var/www/html
    # - ./nextcloud/data:/var/www/html/data
      - nextcloud_aio_mastercontainer:/mnt/docker-aio-config
    environment:
      NEXTCLOUD_ADMIN: admin
      NEXTCLOUD_ADMIN_PASSWORD: supersecret
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud-pi-homelab.duckdns.org`)"
      - "traefik.http.routers.nextcloud.entrypoints=https"
      - "traefik.http.routers.nextcloud.tls.certresolver=myresolver"

  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server:latest
    restart: unless-stopped
    volumes:
      - ./vaultwarden/data:/data
      - influxdb-storage:/var/lib/influxdb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`vaultwarden-homelab.duckdns.org`)"
      - "traefik.http.routers.vaultwarden.entrypoints=https"
      - "traefik.http.routers.vaultwarden.tls.certresolver=myresolver"

  photoprism:
    container_name: photoprism
    image: photoprism/photoprism
    restart: unless-stopped
    ports:
      - "2342:2342"
    environment:
      PHOTOPRISM_ADMIN_PASSWORD: "YourPassword"
      PHOTOPRISM_UPLOAD_NSFW: "false"
    volumes:
      - ./photoprism/storage:/storage
      - ~/pictures:/photoprism/originals
      - influxdb-storage:/var/lib/influxdb

volumes:
  grafana-storage:
  influxdb-storage:
  nextcloud_aio_mastercontainer: